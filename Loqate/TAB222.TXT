OBJECT Table 222 Ship-to Address
{
  OBJECT-PROPERTIES
  {
    Date=22/11/18;
    Time=11:02:00;
    Modified=Yes;
    Version List=NAVW17.10,QAS,SDL1.109,OP14491;
  }
  PROPERTIES
  {
    DataCaptionFields=Customer No.,Name,Code;
    OnInsert=BEGIN
               Cust.GET("Customer No.");
               //Cust.MODIFY(TRUE);
               Name := Cust.Name;


               // SDL1.109 - START
               "Special Instruction 1" := Cust."Special Instruction 1";
               "Special Instruction 2" := Cust."Special Instruction 2";
               "Residential Property" := Cust."Residential Property";
               "Email For Carrier Confirm" := Cust."Email For Carrier Confirm";
               "Phone For Carrier Confirm" := Cust."Phone For Carrier Confirm";
               "Collection On Delivery" := Cust."Collection On Delivery";
               // SDL1.109 - FINISH

               //"Created Date_Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
               //"Last Modified Date_Time":=CURRENTDATETIME;

               //Cust.GET("Customer No.");
               //Cust.MODIFY(TRUE);
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
             END;

    CaptionML=[ENU=Ship-to Address;
               ENG=Ship-to Address];
    LookupPageID=Page301;
  }
  FIELDS
  {
    { 1   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Customer No.;
                                                              ENG=Customer No.];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ENG=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 4   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              ENG=Name 2] }
    { 5   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              ENG=Address] }
    { 6   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ENG=Address 2] }
    { 7   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              ENG=City] }
    { 8   ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              ENG=Contact] }
    { 9   ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ENG=Phone No.] }
    { 10  ;   ;Telex No.           ;Text30        ;CaptionML=[ENU=Telex No.;
                                                              ENG=Telex No.] }
    { 30  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              ENG=Shipment Method Code] }
    { 31  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   OnValidate=BEGIN
                                                                IF "Shipping Agent Code" <> xRec."Shipping Agent Code" THEN
                                                                  VALIDATE("Shipping Agent Service Code",'');
                                                              END;

                                                   CaptionML=[ENU=Shipping Agent Code;
                                                              ENG=Shipping Agent Code] }
    { 32  ;   ;Place of Export     ;Code20        ;CaptionML=[ENU=Place of Export;
                                                              ENG=Place of Export] }
    { 35  ;   ;Country/Region Code ;Code10        ;InitValue=GB;
                                                   TableRelation=Country/Region;
                                                   OnValidate=VAR
                                                                Country@1040000 : Record 9;
                                                              BEGIN
                                                                Country.GET("Country/Region Code");
                                                                IF ("Territory Code" = '') AND (Country."Territory Code" <> '') THEN  //SDL1.036
                                                                  VALIDATE("Territory Code",Country."Territory Code");
                                                              END;

                                                   CaptionML=[ENU=Country/Region Code;
                                                              ENG=Country/Region Code] }
    { 54  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              ENG=Last Date Modified];
                                                   Editable=No }
    { 83  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              ENG=Location Code] }
    { 84  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              ENG=Fax No.] }
    { 85  ;   ;Telex Answer Back   ;Text20        ;CaptionML=[ENU=Telex Answer Back;
                                                              ENG=Telex Answer Back] }
    { 91  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=VAR
                                                                GLSetup@1040003 : Record 98;
                                                                PCTerritory@1040007 : Record 60738;
                                                                GetPostCode@1040002 : Codeunit 60700;
                                                                TmpName@1040001 : Text[30];
                                                                TmpName2@1040000 : Text[30];
                                                                QASMgmt@1040004 : Codeunit 60711;
                                                                TempPos@1040005 : Integer;
                                                                TempStr@1040006 : Text[30];
                                                                TempDistrict@1040009 : Text[30];
                                                                i@1040008 : Integer;
                                                                LoqateFunctions@1000000000 : Codeunit 50002;
                                                                NewPostCode@1000000001 : Code[20];
                                                              BEGIN
                                                                // SDL1.000 START
                                                                IF (CurrFieldNo = FIELDNO("Post Code")) AND ("Post Code" <> '') THEN
                                                                //DOC OP14491 DB 22/11/2018 -
                                                                  BEGIN
                                                                    IF LoqateFunctions.CheckEnabled AND GUIALLOWED THEN BEGIN
                                                                      //DOC OP14491 DB 22/11/2018 -
                                                                      //LoqateFunctions.CaptureInteractiveFind("Post Code",Name,Address,"Address 2",City,County,"Post Code");
                                                                      LoqateFunctions.CaptureInteractiveFind("Post Code",Name,Address,"Address 2",City,County,NewPostCode);
                                                                      IF NewPostCode<>'' THEN
                                                                        "Post Code" := NewPostCode
                                                                      ELSE
                                                                        "Post Code" := xRec."Post Code";
                                                                      //DOC OP14491 DB 22/11/2018 +
                                                                  END ELSE BEGIN
                                                                //DOC OP14491 DB 22/11/2018 +
                                                                  IF QASMgmt.QASEnabledAndApplicable("Post Code") THEN
                                                                    IF NOT QASMgmt.ShipToAddrSearch("Post Code", Rec) THEN
                                                                      IF NOT CONFIRM(Text60700, FALSE, FIELDCAPTION("Post Code")) THEN
                                                                        ERROR('');
                                                                //DOC OP14491 DB 22/11/2018 -
                                                                  END;
                                                                END;
                                                                //DOC OP14491 DB 22/11/2018 +

                                                                {
                                                                // QAS Rapid Integration
                                                                // SDL014 - START()
                                                                //PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                                GLSetup.GET;
                                                                IF GLSetup."Post Code Integration" THEN
                                                                  GetPostCode.PostCodeGetAddr(TmpName,TmpName2,Address,"Address 2",City,County,"Post Code","Country/Region Code");
                                                                // SDL014 - END
                                                                }

                                                                // ------ SDL1.000

                                                                //First half of postcode
                                                                TempPos := STRPOS("Post Code",' ');
                                                                IF TempPos <> 0 THEN
                                                                  TempStr := COPYSTR("Post Code",1,TempPos);

                                                                //Use District as fallback option
                                                                IF TempStr <> '' THEN
                                                                  FOR i := 1 TO STRLEN(TempStr) DO
                                                                    IF UPPERCASE(COPYSTR(TempStr,i,1)) IN ['A'..'Z'] THEN
                                                                      TempDistrict := TempDistrict + UPPERCASE(COPYSTR(TempStr,i,1));

                                                                IF PCTerritory.GET(TempStr) THEN
                                                                  VALIDATE("Territory Code",PCTerritory."Territory Code")
                                                                ELSE IF PCTerritory.GET(TempDistrict) THEN
                                                                  VALIDATE("Territory Code",PCTerritory."Territory Code");

                                                                // ------ SDL1.000
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              ENG=Post Code] }
    { 92  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              ENG=County] }
    { 102 ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              ENG=E-Mail] }
    { 103 ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              ENG=Home Page] }
    { 108 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              ENG=VAT Area Code] }
    { 109 ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              ENG=VAT Liable] }
    { 5792;   ;Shipping Agent Service Code;Code10 ;TableRelation="Shipping Agent Services".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   CaptionML=[ENU=Shipping Agent Service Code;
                                                              ENG=Shipping Agent Service Code] }
    { 5900;   ;Service Zone Code   ;Code10        ;TableRelation="Service Zone";
                                                   CaptionML=[ENU=Service Zone Code;
                                                              ENG=Service Zone Code] }
    { 60700;  ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   CaptionML=[ENU=Territory Code;
                                                              ENG=Territory Code] }
    { 60740;  ;Special Instruction 1;Text25       ;TableRelation="Special Shipping Instruction".Instruction;
                                                   Description=SDL1.109 }
    { 60741;  ;Special Instruction 2;Text25       ;Description=SDL1.109 }
    { 60742;  ;Residential Property;Boolean       ;Description=SDL1.109 }
    { 60743;  ;Email For Carrier Confirm;Text50   ;Description=SDL1.109 }
    { 60744;  ;Phone For Carrier Confirm;Text20   ;Description=SDL1.109 }
    { 60745;  ;Collection On Delivery;Boolean     ;Description=SDL1.109 }
    { 60746;  ;Magento_Add_Id      ;Code20        ;Description=WCL }
    { 60747;  ;Created Date_Time   ;DateTime      ;Description=WCL }
    { 60748;  ;Last Modified Date_Time;DateTime   ;Description=WCL }
    { 60749;  ;Address Select      ;Boolean       ;Description=WCL }
  }
  KEYS
  {
    {    ;Customer No.,Code                       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Name,Address,City,Post Code         }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=untitled;ENG=untitled';
      Cust@1001 : Record 18;
      PostCode@1002 : Record 225;
      Text001@1003 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.;ENG=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.';
      Text60700@1040000 : TextConst 'ENU=Address Search unsuccessful.\\Do you wish to keep the new %1?;ENG=Address Search unsuccessful.\\Do you wish to keep the new %1?';

    PROCEDURE Caption@1() : Text[130];
    BEGIN
      IF "Customer No." = '' THEN
        EXIT(Text000);
      Cust.GET("Customer No.");
      EXIT(STRSUBSTNO('%1 %2 %3 %4',Cust."No.",Cust.Name,Code,Name));
    END;

    PROCEDURE DisplayMap@8();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FINDFIRST THEN
        MapMgt.MakeSelection(DATABASE::"Ship-to Address",GETPOSITION)
      ELSE
        MESSAGE(Text001);
    END;

    BEGIN
    {
      SDL1.000 - A Ireland QUK 23/2/09
        Changed QAS Rapid integration on Post Code field to work with QAS Pro Web
      16.06.09  IJF
        Territory Code now validated on validation of "Country/Region Code".
      SDL1.036 - J Parr QUK 22/9/09 J42845
        Country code only validates territory code if it is blank alreay and the country has a territory code
      SDL1.109 - 10/09/12 - DJR QUK
        Added F60740 - F60745
      //DOC OP14491 DB 22/11/2018 - Added Loqate functionality.
    }
    END.
  }
}

